name: prek-action
description: Run pre-commit hooks using prek
inputs:
  extra-args:
    description: Options to pass to `prek run`
    required: false
    default: '--all-files'
  extra_args:
    description: Options to pass to `prek run` (deprecated, use extra-args)
    required: false
  install-only:
    description: Only install prek, do not run it
    required: false
    default: 'false'
  prek-version:
    description: Version of prek to install (e.g., '0.2.1', 'latest')
    required: false
    default: 'latest'
  working-directory:
    description: The working directory to run prek in
    required: false
    default: '.'
outputs:
  prek-version:
    description: The version of prek that was installed
    value: ${{ steps.resolve.outputs.version }}
runs:
  using: composite
  steps:
  - name: Resolve download URL
    id: resolve
    run: |
      if [[ "${PREK_VERSION}" = "latest" ]]; then
        PREK_VERSION=$(gh api repos/j178/prek/releases/latest --jq '.tag_name')
      fi
      VERSION="${PREK_VERSION#v}"
      VERSION="v${VERSION}"
      echo "version=${VERSION}" >> $GITHUB_OUTPUT
      echo "download_url=https://github.com/j178/prek/releases/download/${VERSION}/prek-installer.sh" >> $GITHUB_OUTPUT
    shell: bash
    env:
      PREK_VERSION: ${{ inputs.prek-version }}
      GH_TOKEN: ${{ github.token }}
  - name: Install prek
    run: "curl --proto '=https' --tlsv1.2 -LsSf '${{ steps.resolve.outputs.download_url }}' | sh"
    shell: bash
  - name: Restore cache
    uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
    with:
      path: |
        ~/.cache/prek
        ~\AppData\Local\prek
      key: prek-v1|${{ runner.os }}|${{ runner.arch }}|${{ hashFiles(format('{0}/**/.pre-commit-config.yaml', inputs.working-directory)) }}
    if: inputs.install-only == 'false'
  - name: Run prek
    run: |
      cmd=(prek run --show-diff-on-failure --color=always)
      
      # Parse extra args safely using bash's read array
      if [[ -n "${EXTRA_ARGS:-}" ]]; then
        read -ra extra_args_array <<< "$EXTRA_ARGS"
        cmd+=("${extra_args_array[@]}")
      fi
      
      echo "Running: ${cmd[*]}"
      "${cmd[@]}"
    shell: bash
    working-directory: ${{ inputs.working-directory }}
    if: inputs.install-only == 'false'
    env:
      EXTRA_ARGS: ${{ inputs.extra_args || inputs.extra-args }}

branding:
  icon: 'git-commit'
  color: 'orange'
